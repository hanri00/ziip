import java.io.*;
import java.util.*;

public class Main {
	
	static class Coord implements Comparable<Coord>{
		int row;
		int col;
		public Coord(int row, int col) {
			super();
			this.row = row;
			this.col = col;
		}
		@Override
		public int compareTo(Coord right) {
			// 1순위 : row가 작은것 우선
			if(this.row < right.row) return -1;
			if(this.row > right.row) return 1;
			
			// 2순위 : col이 큰게 우선
			if(this.col > right.row) return -1;
			if(this.col < right.row) return 1;
			
			return 0;
		}
		@Override
		public String toString() {
			return "Coord [row=" + row + ", col=" + col + "]";
		}
		
	}
	
	
	
	static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	
	public static void main(String[] args) throws IOException {
		int arr[] = {2,1,3,9,1,2,7,6,5};
		Arrays.sort(arr); // <- 비교 기준 : <       >=
		// 1. 비교할 수 있는 객체(comparator) <= int가 아니라 Integer
		// 2. 애초에 int가 아니라 Integer라는 객체
		//		Integer1.compareTo(Integer2) : 	Integer1 < Integer2 - 음수
		//										Integer1 > Integer2 - 양수
		// 										Integer1 ==Integer2 - 0
	
		for(int i = 0; i < arr.length; i++)
			System.out.println(arr[i] + " ");
		System.out.println();
		
		Integer arr_obj[] = {2,1,3,9,1,2,7,6,5};
		Arrays.sort(arr_obj);
		for(int i = 0; i < arr.length; i++)
			System.out.print(arr_obj[i] + " ");
		System.out.println();

		Arrays.sort(arr_obj, Collections.reverseOrder()); // 범용적으로 사용이 가능
		for(int i = 0; i < arr.length; i++)
			System.out.print(arr_obj[i] + " ");
		System.out.println();

		ArrayList<Integer> al = new ArrayList<>();
		al.add(5); al.add(1); al.add(4); al.add(9); al.add(7);
		Collections.sort(al, Collections.reverseOrder()); // <- ArrayList
		for(int i = 0; i < al.size(); i++)
			System.out.print(al.get(i) + " ");
		System.out.println();
		
		Coord[] coords = new Coord[4];
		coords[0] = new Coord(1, 2);
		coords[1] = new Coord(-1, -2);
		coords[2] = new Coord(1, -2);
		coords[3] = new Coord(-1, 2);
		Arrays.sort(coords, Collections.reverseOrder());
		for(int i = 0; i < coords.length; i++)
			System.out.println(coords[i] + " ");
		System.out.println();
		
		
		
		// *sort는 NlogN만큼 반복된다.*
		
		
		
		
		Arrays.sort(arr_obj, (left, right)->right-left);
		for(int i = 0; i < arr.length; i++)
			System.out.print(arr_obj[i] + " ");
		System.out.println();

		Arrays.sort(arr_obj, new order());
		for(int i = 0; i < arr.length; i++)
			System.out.print(arr_obj[i] + " ");
		System.out.println();
	}
	
	static class order implements Comparator<Integer>{
		@Override
		public int compare(Integer o1, Integer o2) {
			return -o1.compareTo(o2);
		}
	}
}